apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-volumeclaim
  namespace: db
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: efs-sc
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: db
spec:
  type: ClusterIP
  selector:
    env: production-db
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: db
spec:
  replicas: 1
  selector:
    matchLabels:
      env: production-db
  template:
    metadata:
      name: mydb-pod
      labels:
        env: production-db
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: crud
                  operator: In
                  values:
                  - db
              topologyKey: topology.kubernetes.io/zone
            weight: 100
      containers:
      - name: database
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: database_name        
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password                  
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: root_pass  
        readinessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysql -h127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD -e'SELECT 1'
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
        livenessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysqladmin -uroot -p$MYSQL_ROOT_PASSWORD ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
          - name: efs-pv
            mountPath: "/var/lib/mysql"
      volumes: 
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config      
        - name: efs-pv
          persistentVolumeClaim:
            claimName: mysql-volumeclaim





