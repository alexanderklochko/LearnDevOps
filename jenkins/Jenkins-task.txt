1. ngrok ngrok http 192.168.0.100:8080
2. update webhook for pet-clinic with new payload

#######FIND TRUE JAVA_HOME PATH#####################
dirname $(dirname $(readlink -f $(which javac))) - find java-home true path
or java -XshowSettings:properties -version 2>&1 > /dev/null | grep 'java.home'


1. Create gilab connection.
2. Jenkins integrations or Gitlabwebhook (url for that you can find in such way:
job configuration -- Build Triggers section)
3. In job configuration for checking Jenkinsfile from Gitlab repository we need credentials, for this do:
login as jenkins user (create password, add to wheel/sudo group, add bin/bash shell), generate ssh key and do 
standart procedure
4. Configure settings in Visual cobe jenkins pipeline linter connector
5. Configuration linux_agent (node). Better for it use SSH host verificated stratagy:
create user jenkins on linux_node, create ~/jenkins_node as workspace, create ~/.ssh and authorized file in it. 
ssh-keygen -t ed25519 -C "linux_agent", cat linux_agent.pub >> authorized_keys, chmod 600 authorized_keys. Add credentional to Jenkins.
Login as jenkins user to jenkins_controller, add private_key to ssh_agent and do ssh <ip_jenkins_node>
Install git (then, in configuration job define Tool (path to git)), install docker, add exsting ssh key to /home/jenkins/.ssh
Extended swap space to 2Gb
6.



2. Jenkins integration ()

3.########ACCESS____TOKENS

    Gitlab access token :

i81vp7XLEv4i8VteY3Wo ----   for all Jenkins integrations
yg72zGsz1C5M92oZhTSo ----   for petclinic project /// unused, cause I used SSH key pair
11beae1f9a3faab297410008bca22c0d03 --- jenkins API token

Manage Jenkins --- Configure System -- gitlab -- add credentials
3. Create --- pipeline --- gitlab configuration --- advanced --- secret tocken --- 32fafaafec327dfed7f04c9bf6e70858
